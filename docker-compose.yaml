version: "3"
services:
  redis-master1:
    image: redis:7.2.1
    container_name: redis-master1 # 容器名称
    ports: # 映射端口，对外提供服务
      - 6380:6379 # redis的服务端口
      - 16380:16379 # redis集群监控端口
      - 2222:22 # redis集群监控端口
    stdin_open: true # 标准输入打开
    tty: true # 后台运行不退出
    privileged: true # 拥有容器内命令执行的权限
    networks: # 指定网关
      redis:
        ipv4_address: 172.19.0.11
    volumes:
      - ./redis-master1/conf/redis.conf:/etc/redis/redis.conf:rw #配置文件目录映射到宿主机
      - ./redis-master1/data:/data
      - ./redis-master1/logs:/logs
    #docker执行的启动命令
    command: redis-server /etc/redis/redis.conf

  redis-master2:
    image: redis:7.2.1
    container_name: redis-master2
    ports:
      - 6381:6379
      - 16381:16379
    stdin_open: true
    tty: true
    privileged: true
    networks:
      redis:
        ipv4_address: 172.19.0.12
    volumes:
      - ./redis-master2/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./redis-master2/data:/data
      - ./redis-master2/logs:/logs
    #docker执行的启动命令
    command: redis-server /etc/redis/redis.conf

  redis-master3:
    image: redis:7.2.1
    container_name: redis-master3
    ports:
      - 6382:6379
      - 16382:16379
    stdin_open: true
    tty: true
    privileged: true
    networks:
      redis:
        ipv4_address: 172.19.0.13    
    volumes:
      - ./redis-master3/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./redis-master3/data:/data
      - ./redis-master3/logs:/logs
    #docker执行的启动命令
    command: redis-server /etc/redis/redis.conf

  redis-slave1:
    image: redis:7.2.1
    container_name: redis-slave1
    ports:
      - 6383:6379
      - 16383:16379
    stdin_open: true
    tty: true
    privileged: true
    networks:
      redis:
        ipv4_address: 172.19.0.14    
    volumes:
      - ./redis-slave1/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./redis-slave1/data:/data
      - ./redis-slave1/logs:/logs
    #docker执行的启动命令
    command: redis-server /etc/redis/redis.conf

  redis-slave2:
    image: redis:7.2.1
    container_name: redis-slave2
    ports:
      - 6384:6379
      - 16384:16379
    stdin_open: true
    tty: true
    privileged: true
    networks:
      redis:
        ipv4_address: 172.19.0.15    
    volumes:
      - ./redis-slave2/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./redis-slave2/data:/data
      - ./redis-slave2/logs:/logs
    #docker执行的启动命令
    command: redis-server /etc/redis/redis.conf

  redis-slave3:
    image: redis:7.2.1
    container_name: redis-slave3
    ports:
      - 6385:6379
      - 16385:16379
    stdin_open: true
    tty: true
    privileged: true
    networks:
      redis:
        ipv4_address: 172.19.0.16    
    volumes:
      - ./redis-slave3/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./redis-slave3/data:/data
      - ./redis-slave3/logs:/logs
    #docker执行的启动命令
    command: redis-server /etc/redis/redis.conf

# 自动创建网络，并手动指定IP网段
networks:
  redis:
    ipam:
      config:
        - subnet: 172.19.0.0/16
